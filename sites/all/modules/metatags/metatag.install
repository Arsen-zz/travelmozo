<?php

/**
 * Implements hook_schema().
 */
function metatag_schema() {
  $schema['metatag_config'] = array(
    'description' => 'Storage of meta tag configuration and defaults.',
    /*'export' => array(
      'key' => 'name',
      'keys' => array('entity', 'bundle'),
      'key name' => 'Name',
      'primary key' => 'id',
      'identifier' => 'config', // Exports will be as $myobj
      'default hook' => 'default_metatag_config',  // Function hook name.
      'api' => array(
        'owner' => 'metatag',
        'api' => 'default_metatag_config',  // Base name for api include files.
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),*/
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'description' => 'The primary identifier for a meta tag configuration set.',
      ),
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type this configuration is attached to.',
      ),
      'bundle' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity bundle this configuration is attached to.',
      ),
      'metatag' => array(
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The meta tag this configuration is attached to.',
      ),
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
        'description' => 'Serialized data containing the meta tag configuration.'
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'entity_type_bundle' => array('entity_type', 'bundle'),
    ),
  );

  $schema['metatag'] = array(
    'fields' => array(
      'entity_type' => array(
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
        'description' => 'The entity type this data is attached to',
      ),
      'entity_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The entity id this data is attached to',
      ),
      // @todo Enable revisionable meta tags.
      'data' => array(
        'type' => 'blob',
        'size' => 'big',
        'not null' => TRUE,
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('entity_type', 'entity_id'),
  );

  $schema['cache_metatag'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_metatag']['description'] = t('Cache table for the generated meta tag output.');

  return $schema;
}
